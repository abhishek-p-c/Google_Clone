{"version":3,"sources":["StateProvider.js","reducer.js","search.js","Home.js","useGoogleSearch.js","SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.424cd422.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from \"react\";\r\nexport const StateContext = createContext();\r\nexport const StateProvider = ({ reducer, initialState, children \r\n}) => (\r\n\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n\r\n) ;\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\n// import React, { createContext, useContext, useReducer } from \r\n// \"react\";\r\n\r\n\r\n\r\n// export const StateContext = createContext();\r\n\r\n// export const StateProvider = ( {reducer, initialState, children\r\n// }) => (\r\n\r\n//     <StateContext.Provider value = {useReducer (reducer,\r\n//     initialState)}>\r\n//         {children}\r\n//     </StateContext.Provider>\r\n// );\r\n// export const useStateValue = () => useContext(StateContext);","export const initialState = {\r\n\r\n    term: null, \r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n        case actionTypes.SET_SEARCH_TERM:\r\n          return {\r\n            ...state,\r\n            term: action.term,\r\n\r\n          };\r\n        default:\r\n          return state;\r\n\r\n  }\r\n};\r\nexport default reducer;","import React, { useState } from \"react\";\r\nimport \"./search.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Search({hideButtons = false}) {\r\n    const[{}, dispatch]= useStateValue();\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const search = (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log('you hit the search button >>', input)\r\n\r\n        dispatch({\r\n            type: actionTypes.SET_SEARCH_TERM,\r\n            term: input\r\n        })\r\n\r\n        history.push(\"./search\");\r\n    };\r\n    return (\r\n        <form className=\"search\">\r\n            <div className='search__input'>\r\n                <SearchIcon className=\"search__inputIcon\" />\r\n                <input value={input} onChange={e => setInput(e.target.value)} />\r\n                <MicIcon />\r\n            </div>\r\n\r\n\r\n        {!hideButtons ? (\r\n            <div className=\"search__buttons\">\r\n                <Button type='submit' onClick={ search } \r\n                variant=\"outlined\">\r\n                    Google Search\r\n                </Button>\r\n                <Button variant=\"outlined\">I'm feeling lucky</Button>\r\n            </div>  \r\n        ): (\r\n            <div className=\"search__buttons\">\r\n            <Button className=\"search__buttonsHidden\" \r\n            type='submit' onClick={ search } \r\n            variant=\"outlined\">\r\n                Google Search\r\n            </Button>\r\n            <Button className=\"search__buttonsHidden\"\r\n            variant=\"outlined\">I'm feeling lucky</Button>\r\n        </div>\r\n\r\n\r\n        )}\r\n    \r\n        </form>            \r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport { Link }from \"react-router-dom\";\r\nimport AppsRoundedIcon from '@material-ui/icons/AppsRounded';\r\nimport {Avatar} from \"@material-ui/core\";\r\nimport Search from './search'\r\n\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className='home'>\r\n            <div className='home__header'>\r\n                <div className='home__headerleft'>\r\n                    <Link to='/about' >About</Link>\r\n                    <Link to='/store' >Store</Link>\r\n                </div>\r\n                <div className='home__headerRight'>\r\n                    <Link to='/gmail' >Gmail</Link>\r\n                    <Link to='/images' >Images</Link>\r\n                    <AppsRoundedIcon />\r\n                    <Avatar />                    \r\n                </div>\r\n            </div>\r\n\r\n            <div className='home__body'>\r\n               <img src=\"https://pngimg.com/uploads/google/google_PNG19644.png\" \r\n               alt=\"\"\r\n               />\r\n               <div className=\"home_inputContainer\">\r\n                <Search />  \r\n               </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\nexport default Home;\r\n","import { useState, useEffect } from 'react'\r\n\r\n\r\n//const CONTEXT_KEY = \"017576662512468239146:omuauf_lfve\";\r\nconst useGoogleSearch = (term) => {\r\n  const [data, setData]= useState(null);\r\n  useEffect(() => {\r\n      const fetchData = async() => {\r\n        fetch (  \r\n          `\r\n          https://www.googleapis.com/customsearch/v1?key=\r\n          AIzaSyANbvuaTc5aXZaN2qDz5cArYd3HMviR_lQ\r\n          &cx=017576662512468239146:omuauf_lfve&q=${term}`\r\n\r\n        )\r\n        .then(response => response.json())\r\n        .then(result => {\r\n          setData(result)\r\n        })\r\n\r\n      }\r\n\r\n      fetchData();\r\n\r\n  }, [term])\r\n  return {data}\r\n};\r\n\r\nexport default useGoogleSearch\r\n","import React from 'react'\r\nimport './SearchPage.css' \r\n\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport useGoogleSearch from \"./useGoogleSearch\";\r\nimport response from \"./response\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Search from \"./search\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nfunction SearchPage() {\r\n    const [{term='tesla'}, dipsatch] = useStateValue();\r\n    // LIVE API CALL\r\n    const {data} = useGoogleSearch(term);\r\n    // MOCK\r\n    //const data= response;\r\n    console.log(data)\r\n    return (\r\n        <div className='searchPage'>\r\n          <div className= 'searchPage__header'>\r\n          <Link to=\"/\">\r\n              <img\r\n              className=\"searchPage__logo\"\r\n              src=\"https://pngimg.com/uploads/google/google_PNG19644.png\"\r\n              alt=\"\" \r\n              />\r\n          </Link>    \r\n\r\n          <div className='searchPage__headerBody'>\r\n             <Search hideButtons />\r\n\r\n             <div className=\"searchPage__option\">\r\n                <div className=\"searchPage__optionsLeft\">\r\n                    <div className=\"searchPage__option\">\r\n                        <SearchIcon />\r\n                        <Link to=\"/all\">All </Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <DescriptionIcon />\r\n                            <Link to=\"/news\">News</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <ImageIcon />\r\n                            <Link to=\"/images\">Images</Link>\r\n                        </div>  \r\n                        <div className=\"searchPage__option\">\r\n                            <LocalOfferIcon />\r\n                            <Link to=\"shopping\">Shopping</Link>\r\n                        </div>  \r\n                        <div className=\"searchPage__option\">\r\n                            <RoomIcon />\r\n                            <Link to=\"/maps\">Maps</Link>\r\n                        </div>\r\n                        <div className=\"searchPage__option\">\r\n                            <MoreVertIcon />\r\n                            <Link to=\"/more\">More</Link>\r\n                        </div>\r\n                </div>\r\n\r\n                <div className=\"searchPage__optionsRight\">\r\n                    <div className=\"searchPage__option\">\r\n                        \r\n                        <Link to=\"/settings\">Settings </Link>\r\n                        </div>\r\n                        \r\n                        <div className=\"searchPage__option\">\r\n                        \r\n                            <Link to=\"/tools\">Tools</Link>\r\n                        </div>\r\n                    </div>\r\n                 </div>\r\n              </div>\r\n          </div>  \r\n          {true && ( \r\n          <div className=\"searchPage__results\">\r\n              <p\r\n              className=\"searchPage__resultCount\"\r\n              >\r\n                  About {data?.searchInformation.formattedTotalResults} results \r\n                  ({data?.searchInformation.formattedSearchTime} seconds) for {term}\r\n              </p>\r\n              {data?.items.map(item => (\r\n                 <div className='searchPage__result'>\r\n                     \r\n                     \r\n                     <a \r\n                        className=\"searchPage__resultLink\" href={item.link}>\r\n                        {item.pagemap?.cse_image?.length > 0 && item.pagemap?.cse_image\r\n                        [0]?.src && (\r\n                            <img\r\n                              className=\"searchPage__ResultImage\"\r\n                              src={\r\n                                item.pagemap?.cse_image?.length > 0 && item.pagemap?.\r\n                                cse_image[0]?.src\r\n                              }\r\n                              alt=\"\"\r\n                            />\r\n\r\n                              \r\n\r\n                        )\r\n                        }\r\n\r\n\r\n\r\n\r\n                       {item.displayLink}\r\n\r\n                     </a>\r\n                     <a\r\n                     className=\"searchPage__resultTitle\"\r\n                     href={item.link} >\r\n                         <h2>{item.title}</h2>\r\n\r\n\r\n                     </a>\r\n\r\n                     <p \r\n                     className=\"searchPage__resultSnippet\">\r\n                         {item.snippet}\r\n                     </p>\r\n\r\n                  </div>\r\n\r\n              ))}\r\n\r\n          </div>  \r\n          )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport SearchPage from \"./SearchPage\";\nimport { BrowserRouter as Router, Switch, Route }from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Router>\n\n        <Switch>\n            <Route path=\"/search\">\n              <SearchPage />\n            \n            </Route>\n            <Route path=\"/\">\n              <Home />\n           </Route> \n        </Switch>\n      </Router>  \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, {initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}